document.getElementById("fileInput").addEventListener("change", uploadFiles);
document.getElementById("showFiles").addEventListener("click", loadFiles);
function uploadFiles(event) {
    let files = event.target.files;
    let formData = new FormData();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progressBar = document.getElementById('progressBar');
    const progressText = document.getElementById('progressText');
    const uploadProgress = document.getElementById('uploadProgress');
    uploadProgress.style.display = 'block';
    progressBar.style.width = '0%';
    progressText.textContent = '0%';

    for (let file of files) {
        formData.append("file", file);
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º XMLHttpRequest –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    const xhr = new XMLHttpRequest();
    xhr.open("POST", "http://192.168.0.26:8000/upload", true);

    xhr.upload.onprogress = function(e) {
        if (e.lengthComputable) {
            const percentComplete = Math.round((e.loaded / e.total) * 100);
            progressBar.style.width = percentComplete + '%';
            progressText.textContent = percentComplete + '%';
        }
    };

    xhr.onload = function() {
        uploadProgress.style.display = 'none';
        if (xhr.status === 200) {
            const data = JSON.parse(xhr.responseText);
            console.log(data.message);
            loadFiles();
        } else {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", xhr.responseText);
        }
    };

    xhr.onerror = function() {
        uploadProgress.style.display = 'none';
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è");
    };

    xhr.send(formData);
}

function loadFiles() {
    const loader = document.getElementById('loader');
    const fileList = document.getElementById('fileList');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä –∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    loader.style.display = 'block';
    fileList.style.display = 'none';

    fetch("http://192.168.0.26:8000/files")
        .then(response => response.json())
        .then(files => {
            fileList.innerHTML = "";

            if (files.length === 0) {
                fileList.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-box-open"></i>
                        <p>–§–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
                    </div>
                `;
            } else {
                files.forEach(file => {
                    // ... –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–∞–π–ª–æ–≤ ...
                });
            }
        })
        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:", error))
        .finally(() => {
            loader.style.display = 'none';
            fileList.style.display = 'block';
        });
}
function uploadFiles(event) {
    let files = event.target.files;
    let formData = new FormData();

    for (let file of files) {
        formData.append("file", file);
    }

    fetch("http://192.168.0.26:8000/upload", {
        method: "POST",
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        console.log(data.message);
        loadFiles(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    })
    .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", error));
}

function loadFiles() {
    console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã...");
    fetch("http://192.168.0.26:8000/files")
        .then(response => response.json())
        .then(files => {
            let fileList = document.getElementById("fileList");
            fileList.innerHTML = "";

            if (files.length === 0) {
                fileList.innerHTML = "<p>üìÇ –§–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!</p>";
                return;
            }

            files.forEach(file => {
                let div = document.createElement("div");
                div.classList.add("file-item");

                let fileName = document.createElement("span");
                fileName.textContent = file;

                let encodedFile = encodeURIComponent(file);

                let downloadBtn = document.createElement("a");
                downloadBtn.classList.add("download-btn");
                downloadBtn.innerHTML = "üíæ –°–∫–∞—á–∞—Ç—å";
                downloadBtn.href = `http://192.168.0.26:8000/download/${encodedFile}`;
                downloadBtn.download = file;

                let deleteBtn = document.createElement("button");
                deleteBtn.classList.add("delete-btn");
                deleteBtn.innerHTML = "üóë –£–¥–∞–ª–∏—Ç—å";
                deleteBtn.onclick = () => deleteFile(encodedFile, div);

                div.appendChild(fileName);
                div.appendChild(downloadBtn);
                div.appendChild(deleteBtn);
                fileList.appendChild(div);
            });

            fileList.style.display = "block";
        })
        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:", error));
}

function deleteFile(filename, fileElement) {
    fetch(`http://192.168.0.26:8000/delete/${filename}`, { method: "DELETE" })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log(`‚úÖ –§–∞–π–ª ${filename} —É–¥–∞–ª—ë–Ω!`);
                fileElement.remove();
            } else {
                console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", data.error);
            }
        })
        .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ:", error));
}